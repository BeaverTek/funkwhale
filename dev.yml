version: '2'

services:

  front:
    build:
      dockerfile: docker/Dockerfile.dev
      context: ./front
    env_file: .env.dev
    environment:
      - "HOST=0.0.0.0"
    ports:
      - "8080:8080"
    volumes:
      - './front:/app'
      - /app/node_modules

  postgres:
    env_file: .env.dev
    image: postgres

  redis:
    env_file: .env.dev
    image: redis:3.0

  celeryworker:
    env_file: .env.dev
    build:
      context: ./api
      dockerfile: docker/Dockerfile.test
    links:
     - postgres
     - redis
    command: python manage.py celery worker
    environment:
      - "DJANGO_ALLOWED_HOSTS=localhost"
      - "DJANGO_SETTINGS_MODULE=config.settings.local"
      - "DJANGO_SECRET_KEY=dev"
      - C_FORCE_ROOT=true
      - "DATABASE_URL=postgresql://postgres@postgres/postgres"
      - "CACHE_URL=redis://redis:6379/0"
    volumes:
      - ./api:/app
      - ./data/music:/music
  api:
    env_file: .env.dev
    build:
      context: ./api
      dockerfile: docker/Dockerfile.test
    command: python /app/manage.py runserver 0.0.0.0:12081
    volumes:
      - ./api:/app
      - ./data/music:/music
    environment:
      - "DJANGO_ALLOWED_HOSTS=localhost"
      - "DJANGO_SETTINGS_MODULE=config.settings.local"
      - "DJANGO_SECRET_KEY=dev"
      - "DATABASE_URL=postgresql://postgres@postgres/postgres"
      - "CACHE_URL=redis://redis:6379/0"
    ports:
      - "12081:12081"
    links:
      - postgres
      - redis

  nginx:
    env_file: .env.dev
    image: nginx
    links:
      - api
      - front
    volumes:
      - ./docker/nginx/conf.dev:/etc/nginx/nginx.conf
      - ./api/funkwhale_api/media:/protected/media
    ports:
      - "0.0.0.0:6001:6001"
